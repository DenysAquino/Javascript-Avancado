{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","constructor","connection","_connection","_store","adiciona","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","e","onerror","console","log","target","error","listaTodos","cursor","openCursor","negociacoes","atual","result","dado","value","push","_data","_quantidade","_valor","continue","apagaTodos","clear"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,sBAAzB;;AAEA,OAAO,MAAMC,aAAN,CAAoB;;AAEvBC,gBAAYC,UAAZ,EAAwB;;AAEpB,aAAKC,WAAL,GAAmBD,UAAnB;AACA,aAAKE,MAAL,GAAc,aAAd;AACH;;AAEDC,aAASC,UAAT,EAAqB;;AAEjB,eAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;;AAEpC,gBAAIC,UAAU,KAAKP,WAAL,CACTQ,WADS,CACG,CAAC,KAAKP,MAAN,CADH,EACkB,WADlB,EAETQ,WAFS,CAEG,KAAKR,MAFR,EAGTS,GAHS,CAGLP,UAHK,CAAd;;AAKAI,oBAAQI,SAAR,GAAoBC,KAAK;;AAErBP;AACH,aAHD;;AAKAE,oBAAQM,OAAR,GAAkBD,KAAK;AACnBE,wBAAQC,GAAR,CAAYH,EAAEI,MAAF,CAASC,KAArB;AACAX,uBAAO,0CAAP;AACH,aAHD;AAIH,SAhBM,CAAP;AAiBH;;AAEDY,iBAAa;;AAET,eAAO,IAAId,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;;AAEpC,gBAAIa,SAAS,KAAKnB,WAAL,CACRQ,WADQ,CACI,CAAC,KAAKP,MAAN,CADJ,EACmB,WADnB,EAERQ,WAFQ,CAEI,aAFJ,EAGRW,UAHQ,EAAb;;AAKA,gBAAIC,cAAc,EAAlB;;AAEAF,mBAAOR,SAAP,GAAmBC,KAAK;;AAEpB,oBAAIU,QAAQV,EAAEI,MAAF,CAASO,MAArB;;AAEA,oBAAID,KAAJ,EAAW;;AAEP,wBAAIE,OAAOF,MAAMG,KAAjB;;AAEAJ,gCAAYK,IAAZ,CAAiB,IAAI9B,UAAJ,CAAe4B,KAAKG,KAApB,EAA2BH,KAAKI,WAAhC,EAA6CJ,KAAKK,MAAlD,CAAjB;;AAEAP,0BAAMQ,QAAN;AAEH,iBARD,MAQO;AACHzB,4BAAQgB,WAAR;AACH;AACJ,aAfD;;AAiBAF,mBAAON,OAAP,GAAiBD,KAAK;;AAElBE,wBAAQC,GAAR,CAAYH,EAAEI,MAAF,CAASC,KAArB;AACAX,uBAAO,yCAAP;AAEH,aALD;AAMH,SAhCM,CAAP;AAiCH;;AAEDyB,iBAAa;AACT,eAAO,IAAI3B,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;;AAEpC,gBAAIC,UAAU,KAAKP,WAAL,CACTQ,WADS,CACG,CAAC,KAAKP,MAAN,CADH,EACkB,WADlB,EAETQ,WAFS,CAEG,aAFH,EAGTuB,KAHS,EAAd;;AAKAzB,oBAAQI,SAAR,GAAoBC,KAAKP,QAAQ,mCAAR,CAAzB;;AAEAE,oBAAQM,OAAR,GAAkBD,KAAK;AACnBE,wBAAQC,GAAR,CAAYH,EAAEI,MAAF,CAASC,KAArB;AACAX,uBAAO,yCAAP;AACH,aAHD;AAIH,SAbM,CAAP;AAcH;AAjFsB","file":"NegociacaoDao.js","sourcesContent":["import {Negociacao} from '../models/Negociacao'\r\n\r\nexport class NegociacaoDao {\r\n\r\n    constructor(connection) {\r\n\r\n        this._connection = connection\r\n        this._store = 'negociacoes'\r\n    }\r\n\r\n    adiciona(negociacao) {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let request = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .add(negociacao)\r\n\r\n            request.onsuccess = e => {\r\n\r\n                resolve()\r\n            }\r\n\r\n            request.onerror = e => {\r\n                console.log(e.target.error)\r\n                reject('Não foi possivél adicionar a negociação!')\r\n            }\r\n        })\r\n    }\r\n\r\n    listaTodos() {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let cursor = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore('negociacoes')\r\n                .openCursor()\r\n\r\n            let negociacoes = []\r\n\r\n            cursor.onsuccess = e => {\r\n\r\n                let atual = e.target.result\r\n\r\n                if (atual) {\r\n\r\n                    let dado = atual.value\r\n\r\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor))\r\n\r\n                    atual.continue()\r\n\r\n                } else {\r\n                    resolve(negociacoes)\r\n                }\r\n            }\r\n\r\n            cursor.onerror = e => {\r\n\r\n                console.log(e.target.error)\r\n                reject(\"Não foi possivél listar as negociações!\")\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    apagaTodos() {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let request = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore('negociacoes')\r\n                .clear()\r\n\r\n            request.onsuccess = e => resolve('Negocicações apagadas com sucesso')\r\n\r\n            request.onerror = e => {\r\n                console.log(e.target.error)\r\n                reject('Não foi possível remover as negociações')\r\n            }\r\n        })\r\n    }\r\n}"]}
